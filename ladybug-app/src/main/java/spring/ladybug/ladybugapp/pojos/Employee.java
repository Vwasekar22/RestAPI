package spring.ladybug.ladybugapp.pojos;
// Generated Jan 17, 2020 7:52:18 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employees generated by hbm2java
 */
@Entity
@Table(name = "employees", catalog = "ladybug_main")
public class Employee implements java.io.Serializable {

	private String empId;
	private Employee employee;
	private Login login;
	private String firstName;
	private String lastName;
	private Date createdOn;
	private String empRole;
	private String empUsername;
	private Set<Employee> employeeses = new HashSet<>();
	private Set<Project> projectses = new HashSet<>();
	private Set<BugDtls> bugDtlses = new HashSet<>();

	public Employee() {
	}

	public Employee(String empId, Login login) {
		this.empId = empId;
		this.login = login;
	}

	public Employee(String empId, Employee employee, Login login, String firstName, String lastName, Date createdOn,
		    String empRole, String empUsername,
			Set<Employee> employeeses, Set<Project> projectses, Set<BugDtls> bugDtlses) {
		this.empId = empId;
		this.employee = employee;
		this.login = login;
		this.firstName = firstName;
		this.lastName = lastName;
		this.createdOn = createdOn;
		this.empRole = empRole;
		this.empUsername = empUsername;
		this.employeeses = employeeses;
		this.projectses = projectses;
		this.bugDtlses = bugDtlses;
	}

	@Id
	@Column(name = "emp_id", length = 45)
	public String getEmpId() {
		return this.empId;
	}

	public void setEmpId(String empId) {
		this.empId = empId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mgr_id")
	public Employee getEmployees() {
		return this.employee;
	}

	public void setEmployees(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "login_email", nullable = false)
	public Login getLogin() {
		return this.login;
	}

	public void setLogin(Login login) {
		this.login = login;
	}

	@Column(name = "first_name", length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "emp_role", length = 45)
	public String getEmpRole() {
		return this.empRole;
	}

	public void setEmpRole(String empRole) {
		this.empRole = empRole;
	}

	@Column(name = "emp_username", length = 45)
	public String getEmpUsername() {
		return this.empUsername;
	}

	public void setEmpUsername(String empUsername) {
		this.empUsername = empUsername;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<Employee> getEmployeeses() {
		return this.employeeses;
	}

	public void setEmployeeses(Set<Employee> employeeses) {
		this.employeeses = employeeses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "emp_project_relation", catalog = "ladybug_main", joinColumns = {
			@JoinColumn(name = "e_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "proj_id", nullable = false, updatable = false) })
	public Set<Project> getProjectses() {
		return this.projectses;
	}

	public void setProjectses(Set<Project> projectses) {
		this.projectses = projectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employees")
	public Set<BugDtls> getBugDtlses() {
		return this.bugDtlses;
	}

	public void setBugDtlses(Set<BugDtls> bugDtlses) {
		this.bugDtlses = bugDtlses;
	}

}
